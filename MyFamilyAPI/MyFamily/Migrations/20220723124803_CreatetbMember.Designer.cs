// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFamily.Data;

#nullable disable

namespace MyFamily.Migrations
{
    [DbContext(typeof(MyFamilyContext))]
    [Migration("20220723124803_CreatetbMember")]
    partial class CreatetbMember
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyFamily.Models.tbAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbAddresss");
                });

            modelBuilder.Entity("MyFamily.Models.tbFamily", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MainAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tbGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tbMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tbGroupId");

                    b.HasIndex("tbMemberId");

                    b.ToTable("tbFamilys");
                });

            modelBuilder.Entity("MyFamily.Models.tbGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DESCRIPTION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbGroups");
                });

            modelBuilder.Entity("MyFamily.Models.tbMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Father")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mother")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("tbAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tbAddressId");

                    b.ToTable("tbMembers");
                });

            modelBuilder.Entity("MyFamily.Models.tbFamily", b =>
                {
                    b.HasOne("MyFamily.Models.tbGroup", "tbGroup")
                        .WithMany("tbFamilies")
                        .HasForeignKey("tbGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFamily.Models.tbMember", "tbMember")
                        .WithMany("tbFamilies")
                        .HasForeignKey("tbMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbGroup");

                    b.Navigation("tbMember");
                });

            modelBuilder.Entity("MyFamily.Models.tbMember", b =>
                {
                    b.HasOne("MyFamily.Models.tbAddress", "tbAddress")
                        .WithMany("tbMembers")
                        .HasForeignKey("tbAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbAddress");
                });

            modelBuilder.Entity("MyFamily.Models.tbAddress", b =>
                {
                    b.Navigation("tbMembers");
                });

            modelBuilder.Entity("MyFamily.Models.tbGroup", b =>
                {
                    b.Navigation("tbFamilies");
                });

            modelBuilder.Entity("MyFamily.Models.tbMember", b =>
                {
                    b.Navigation("tbFamilies");
                });
#pragma warning restore 612, 618
        }
    }
}
